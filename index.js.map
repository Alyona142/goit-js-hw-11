{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = \"46806668-35f52dba5a140225900df36e0\";\nconst list = document.querySelector(\".list\");\n\nconst params = new URLSearchParams({\n    key: API_KEY,\n    q: \"\",               \n    image_type: \"photo\",  \n    orientation: \"horizontal\",\n    safesearch: \"true\"\n});\n\nconst fetchImages = (query) => {\n  params.set('q', query); \n\n  return fetch(`https://pixabay.com/api/?${params}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      return response.json();\n    })\n    .then((response) => {\n      if (response.hits.length === 0) {\n        throw new Error('Sorry, there are no images matching your search query. Please try again!');\n      }\n\n      return response.hits.map(hit => ({\n        webformatURL: hit.webformatURL,\n        largeImageURL: hit.largeImageURL,\n        tags: hit.tags,\n        likes: hit.likes,\n        views: hit.views,\n        comments: hit.comments,\n        downloads: hit.downloads,\n      }));\n    })\n    .catch((error) => { throw error });\n};\n\nexport { fetchImages };\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nexport function renderGallery(images, gallery) {\n  gallery.innerHTML = createGalleryMarkup(images);\n  lightbox.refresh();\n}\nfunction createGalleryMarkup(images) {\n  if (!images.hits || !Array.isArray(images.hits)) {\n    console.error(\"Invalid data format:\", images);\n    return '';\n  }\n\n  return images.hits\n    .map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n      <li class=\"gallery-item hvr-grow\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n          <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\">\n          <figure class=\"gallery-figure\">\n            <ul class=\"img-content-wrapper\">\n              <li>Likes<span>${likes}</span></li>\n              <li>Views<span>${views}</span></li>\n              <li>Comments<span>${comments}</span></li>\n              <li>Downloads<span>${downloads}</span></li>\n            </ul>\n          </figure>\n        </a>\n      </li>\n    `)\n    .join('');\n}\n","import { fetchImages } from './js/pixabay-api.js';\nimport { renderGallery } from './js/render-functions.js';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport 'izitoast/dist/css/iziToast.css';\n\nconst API_KEY = '46806668-35f52dba5a140225900df36e0';\nconst API_URL = 'https://pixabay.com/api/';\n\nconst searchForm = document.querySelector('.search-form'); \nconst searchInput = searchForm.querySelector('input[name=\"search\"]'); \nconst gallery = document.querySelector('.gallery');\nconst loaderContainer = document.querySelector('.loader-container'); \n\nconst lightbox = new SimpleLightbox('.gallery a');\n\nfunction showLoader() {\n  loaderContainer.style.display = 'flex';\n}\n\nfunction hideLoader() {\n  loaderContainer.style.display = 'none';\n}\n\nsearchForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const query = searchInput.value.trim();\n  if (query.length === 0) {\n    return;\n  }\n\n  showLoader();\n  fetchImages(query)\n    .then(images => {\n\n      if (Array.isArray(images) && images.length > 0) {\n        renderGallery(images, gallery);\n        lightbox.refresh();\n      } else {\n        console.warn('Немає зображень для цього запиту');\n        iziToast.info({ title: 'Info', message: 'No images found for your search query.' });\n        gallery.innerHTML = '';\n      }\n      hideLoader();\n    })\n    .catch(error => {\n      console.error('Помилка при завантаженні зображень:', error);\n      hideLoader();\n      gallery.innerHTML = '';\n    });\n  });"],"names":["API_KEY","params","fetchImages","query","response","hit","error","lightbox","SimpleLightbox","renderGallery","images","gallery","createGalleryMarkup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","searchForm","searchInput","loaderContainer","showLoader","hideLoader","event"],"mappings":"svBAAA,MAAMA,EAAU,qCACH,SAAS,cAAc,OAAO,EAE3C,MAAMC,EAAS,IAAI,gBAAgB,CAC/B,IAAKD,EACL,EAAG,GACH,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,CAAC,EAEKE,EAAeC,IACnBF,EAAO,IAAI,IAAKE,CAAK,EAEd,MAAM,4BAA4BF,CAAM,EAAE,EAC9C,KAAMG,GAAa,CAClB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAGjC,OAAOA,EAAS,MACtB,CAAK,EACA,KAAMA,GAAa,CAClB,GAAIA,EAAS,KAAK,SAAW,EAC3B,MAAM,IAAI,MAAM,0EAA0E,EAG5F,OAAOA,EAAS,KAAK,IAAIC,IAAQ,CAC/B,aAAcA,EAAI,aAClB,cAAeA,EAAI,cACnB,KAAMA,EAAI,KACV,MAAOA,EAAI,MACX,MAAOA,EAAI,MACX,SAAUA,EAAI,SACd,UAAWA,EAAI,SAChB,EAAC,CACR,CAAK,EACA,MAAOC,GAAU,CAAE,MAAMA,CAAO,CAAA,GClC/BC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC,EAEM,SAASC,EAAcC,EAAQC,EAAS,CAC7CA,EAAQ,UAAYC,EAAoBF,CAAM,EAC9CH,EAAS,QAAO,CAClB,CACA,SAASK,EAAoBF,EAAQ,CACnC,MAAI,CAACA,EAAO,MAAQ,CAAC,MAAM,QAAQA,EAAO,IAAI,GAC5C,QAAQ,MAAM,uBAAwBA,CAAM,EACrC,IAGFA,EAAO,KACX,IAAI,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA;AAAA,wCAE/CL,CAAa;AAAA,4CACTD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,+BAGvCC,CAAK;AAAA,+BACLC,CAAK;AAAA,kCACFC,CAAQ;AAAA,mCACPC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA,KAKvC,EACA,KAAK,EAAE,CACZ,CC1BA,MAAMC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAcD,EAAW,cAAc,sBAAsB,EAC7DT,EAAU,SAAS,cAAc,UAAU,EAC3CW,EAAkB,SAAS,cAAc,mBAAmB,EAE5Df,EAAW,IAAIC,EAAe,YAAY,EAEhD,SAASe,GAAa,CACpBD,EAAgB,MAAM,QAAU,MAClC,CAEA,SAASE,GAAa,CACpBF,EAAgB,MAAM,QAAU,MAClC,CAEAF,EAAW,iBAAiB,SAAWK,GAAU,CAC/CA,EAAM,eAAc,EAEpB,MAAMtB,EAAQkB,EAAY,MAAM,KAAI,EAChClB,EAAM,SAAW,IAIrBoB,IACArB,EAAYC,CAAK,EACd,KAAKO,GAAU,CAEV,MAAM,QAAQA,CAAM,GAAKA,EAAO,OAAS,GAC3CD,EAAcC,EAAQC,CAAO,EAC7BJ,EAAS,QAAO,IAEhB,QAAQ,KAAK,kCAAkC,EAC/C,SAAS,KAAK,CAAE,MAAO,OAAQ,QAAS,wCAAwC,CAAE,EAClFI,EAAQ,UAAY,IAEtBa,GACN,CAAK,EACA,MAAMlB,GAAS,CACd,QAAQ,MAAM,sCAAuCA,CAAK,EAC1DkB,IACAb,EAAQ,UAAY,EAC1B,CAAK,EACL,CAAG"}